<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ItemMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="StatusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>120, 15</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SBLMode.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAgxJREFUOE+lkvtL
        U2EYx+0PEbtpFwnBKPGKiJImGP0gYhIYs1E5GF5gIxkpA00JRSmMEF0ohMh+GaRWYlqabMVcNdS2QpaI
        VqiDIYhk397vA6fXhCjyhYdzeM/5fp7vczkAdeL2cwho7v/wWzT1zcN+Pwhr51uY2/y41PQaF+wzKKiZ
        QvaN58g0jyLd5KEUcQbg+84P/Cm2tncQjW3j68YWIqubCC3FcOJc478BAuGoZM6zvoRnakXEruEIjhc4
        /g5gZop9c+voGAyLbQIfeBZxLL9BA1jzXvuGbWamuKh+GmmVbswE19A59FEBbmoAG7YbsLtm2mZmiml9
        cvabNDwpz6YB7LYBoMXCumkJr7LOmnnHzBQ/9X2Bo2cOibm1GsBREbAQiYmw/8lnuCeWkVzcgnZlnw1j
        3HV/wuNXK6i/9x5Hc6wawDlTXHbLJ+LZUBQPRyKwdQdxutwl1h+NLXHh5Ht1ewBHsiwawCW57HyDAfWR
        dvl0uhZQ1eqX8aVc7EKLqrum651ATLf9OJx5XQM4KmY0xPzZ0hFAiQJnXB0WwME0E3IsL5B17ZlADqWb
        NYDrOepdlcysmTWWOrxqbceRWtaLk0VO1XW72D5Vckd2gMBfq8zdpmUG62NJvKM4+XyziDk24xmfWoGE
        s1c0gHPmbrPTpHNJKOCo2G1mZs20zcwUJ5yp1AB5+8/zEwgF5GMVDxh4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9P/U1db/tLKu/+XWwv/i07n/u7au/8zO0P/r7O3/5ubm/MrKyvuysrL+srKy/7W1tf+kpKT/e3t7/G1t
        baBxcXEhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMLCwj6mpqbTsLCw/tvb2/r19fX79PT0//X1
        9f/c3N3/s7Gx/9zUx///9N3//+7T///ryf//6sD/6tOv/8C3qf/Iy83/5+jq/+Li4v3FxcX8ra2t/qys
        rP+urq7/m5ub/3Z2dvdvb2+SampqGAAAAAAAAAAAAAAAAAAAAAC+vr6FsbGx/c7Ozvvy8vL69vb2/vb2
        9v/i4uL/srKy/9PQzP///O////bk///v2f//7ND//+nH///lwP//5bb/+tin/+PAlv+/rZ3/xcjL/+Hk
        5f/f4OD8wcHB/KioqP2np6f/qqqq/5OTk/9zc3Pzb29vhGVlZRAAAAAAAAAAAL29vfvw8PD6+fn5/fX1
        9f/o6Oj/tra2/8/Pz/////////33///37P//8+L//+/Z///s0P//6Mf//+W+///itv/31Kb/7cSV/+az
        gv/VoXT/vKGM/8XHyf/c4OL/29zc/b29vfyioqL+oqKi/6SkpP+Ojo7/bW1t1gAAAAAAAAAAycnJncbG
        xvra2tr/8PDw/9jY2P+0tLT/yMjI//bz8/////j///nt///04v//79j//+zP///oxv//5b3//eK0//XT
        pf/swpT/4rKD/9qhcv/QkF7/xH9O/7aPd//EwsL/2Nrb/9jY2P25ubn8nZ2d/p+fn/93d3fzAAAAAAAA
        AAAAAAAA1dXVE8fHx2XBwcG8xMTE+tra2v/m5ub/wsLC/7m5t//SzcX//fHe///z2v//7M///+nH///m
        vf/94bP/9NKl/+vBk//isYH/2KBw/9CPX//GfUr/u2Qt/69fMf+2qqT/0tLT/9vc3f/Q1db9pauv/Xp8
        fP0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwYw8PDar6+vsDExMT819fX/9zc3f+9v8D/wby1/+DT
        vf//6sX//+e9///is//10qL/68CR/+Kvf//Ynmr/y45f/7uTeP/AtK3/0Nba/9Xb3//Byc//qp6Y/5pq
        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
        AAAAAAAAAAAAAAAAAAAAAAAA/5YAU/i2Vv/7xnT/9q1D/+2VHv/hfAD/1m0A/stiAPTKXADGw1MAkb5O
        AFy8SgAqVQAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4jwAV64MAyOiAAPHddQDH1m0AlNFqAGDFXwAt3G4ABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////////////////A////AD///AAf//gAB//gA
        AH/gAAAfwAAAB4AAAAGAAAABgAAAAcAAAAH4AAAB/wAAAf/gAAP//AAH//8AD//8AA//+AAf//AAP//g
        AH//wAD//4AB//4AA//8AAf/+AAP//gAP//4B/////////////8=
</value>
  </data>
</root>